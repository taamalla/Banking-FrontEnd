import { ApplicationRef, ComponentFactoryResolver, EventEmitter, Injector, NgZone, RendererFactory2 } from '@angular/core';
import { ScrollBar } from '../util/scrollbar';
import { NgbModalRef } from './modal-ref';
import * as ɵngcc0 from '@angular/core';
export declare class NgbModalStack {
    private _applicationRef;
    private _injector;
    private _document;
    private _scrollBar;
    private _rendererFactory;
    private _ngZone;
    private _activeWindowCmptHasChanged;
    private _ariaHiddenValues;
    private _backdropAttributes;
    private _modalRefs;
    private _windowAttributes;
    private _windowCmpts;
    private _activeInstances;
    constructor(_applicationRef: ApplicationRef, _injector: Injector, _document: any, _scrollBar: ScrollBar, _rendererFactory: RendererFactory2, _ngZone: NgZone);
    open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options: any): NgbModalRef;
    get activeInstances(): EventEmitter<NgbModalRef[]>;
    dismissAll(reason?: any): void;
    hasOpenModals(): boolean;
    private _attachBackdrop;
    private _attachWindowComponent;
    private _applyWindowOptions;
    private _applyBackdropOptions;
    private _getContentRef;
    private _createFromTemplateRef;
    private _createFromString;
    private _createFromComponent;
    private _setAriaHidden;
    private _revertAriaHidden;
    private _registerModalRef;
    private _registerWindowCmpt;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgbModalStack, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtc3RhY2suZC50cyIsInNvdXJjZXMiOlsibW9kYWwtc3RhY2suZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBsaWNhdGlvblJlZiwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBFdmVudEVtaXR0ZXIsIEluamVjdG9yLCBOZ1pvbmUsIFJlbmRlcmVyRmFjdG9yeTIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgU2Nyb2xsQmFyIH0gZnJvbSAnLi4vdXRpbC9zY3JvbGxiYXInO1xyXG5pbXBvcnQgeyBOZ2JNb2RhbFJlZiB9IGZyb20gJy4vbW9kYWwtcmVmJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmdiTW9kYWxTdGFjayB7XHJcbiAgICBwcml2YXRlIF9hcHBsaWNhdGlvblJlZjtcclxuICAgIHByaXZhdGUgX2luamVjdG9yO1xyXG4gICAgcHJpdmF0ZSBfZG9jdW1lbnQ7XHJcbiAgICBwcml2YXRlIF9zY3JvbGxCYXI7XHJcbiAgICBwcml2YXRlIF9yZW5kZXJlckZhY3Rvcnk7XHJcbiAgICBwcml2YXRlIF9uZ1pvbmU7XHJcbiAgICBwcml2YXRlIF9hY3RpdmVXaW5kb3dDbXB0SGFzQ2hhbmdlZDtcclxuICAgIHByaXZhdGUgX2FyaWFIaWRkZW5WYWx1ZXM7XHJcbiAgICBwcml2YXRlIF9iYWNrZHJvcEF0dHJpYnV0ZXM7XHJcbiAgICBwcml2YXRlIF9tb2RhbFJlZnM7XHJcbiAgICBwcml2YXRlIF93aW5kb3dBdHRyaWJ1dGVzO1xyXG4gICAgcHJpdmF0ZSBfd2luZG93Q21wdHM7XHJcbiAgICBwcml2YXRlIF9hY3RpdmVJbnN0YW5jZXM7XHJcbiAgICBjb25zdHJ1Y3RvcihfYXBwbGljYXRpb25SZWY6IEFwcGxpY2F0aW9uUmVmLCBfaW5qZWN0b3I6IEluamVjdG9yLCBfZG9jdW1lbnQ6IGFueSwgX3Njcm9sbEJhcjogU2Nyb2xsQmFyLCBfcmVuZGVyZXJGYWN0b3J5OiBSZW5kZXJlckZhY3RvcnkyLCBfbmdab25lOiBOZ1pvbmUpO1xyXG4gICAgb3Blbihtb2R1bGVDRlI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgY29udGVudEluamVjdG9yOiBJbmplY3RvciwgY29udGVudDogYW55LCBvcHRpb25zOiBhbnkpOiBOZ2JNb2RhbFJlZjtcclxuICAgIGdldCBhY3RpdmVJbnN0YW5jZXMoKTogRXZlbnRFbWl0dGVyPE5nYk1vZGFsUmVmW10+O1xyXG4gICAgZGlzbWlzc0FsbChyZWFzb24/OiBhbnkpOiB2b2lkO1xyXG4gICAgaGFzT3Blbk1vZGFscygpOiBib29sZWFuO1xyXG4gICAgcHJpdmF0ZSBfYXR0YWNoQmFja2Ryb3A7XHJcbiAgICBwcml2YXRlIF9hdHRhY2hXaW5kb3dDb21wb25lbnQ7XHJcbiAgICBwcml2YXRlIF9hcHBseVdpbmRvd09wdGlvbnM7XHJcbiAgICBwcml2YXRlIF9hcHBseUJhY2tkcm9wT3B0aW9ucztcclxuICAgIHByaXZhdGUgX2dldENvbnRlbnRSZWY7XHJcbiAgICBwcml2YXRlIF9jcmVhdGVGcm9tVGVtcGxhdGVSZWY7XHJcbiAgICBwcml2YXRlIF9jcmVhdGVGcm9tU3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfY3JlYXRlRnJvbUNvbXBvbmVudDtcclxuICAgIHByaXZhdGUgX3NldEFyaWFIaWRkZW47XHJcbiAgICBwcml2YXRlIF9yZXZlcnRBcmlhSGlkZGVuO1xyXG4gICAgcHJpdmF0ZSBfcmVnaXN0ZXJNb2RhbFJlZjtcclxuICAgIHByaXZhdGUgX3JlZ2lzdGVyV2luZG93Q21wdDtcclxufVxyXG4iXX0=